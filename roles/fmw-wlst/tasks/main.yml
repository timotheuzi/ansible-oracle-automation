################################################################################
# ==> Main Tasks for startup actions
# ==> Starts Weblogic, copies relevent files for node manager, and starts all 
# ==> managed servers
################################################################################    
# ==> 

#- name: Wait for email server SMTP {{ emserver_name }} to respond
#  wait_for: port={{ emserver_smtp_port }} host={{ emserver_name }} delay=2 timeout=100
  
#- name: Wait for email server IMAP {{ emserver_name }} to respond
#  wait_for: port={{ emserver_imap_port }} host={{ emserver_name }} delay=2 timeout=100
  
#- name: Wait for email server IMAP {{ emserver_name }} port 2 to respond
#  wait_for: port={{ emserver_imap_2_port }} host={{ emserver_name }} delay=2 timeout=100

#- name: Clean path
#  file:
#    state: absent
#    path: "{{ domain_user_projects }}/ucm/cs/bin/"
    
#- name: Copy Nodemanager Properties file
#  template: src=nodemanager.properties dest={{ nodemanager_home }} owner={{ oracle_user }} group={{ oracle_group }} mode=0770

#- name: Copy start all servers python file
#  template: src=startAllServers.py dest={{ domain_user_projects }}/wlst_scripts/ owner={{ oracle_user }} group={{ oracle_group }} mode=0770
  
- name: Run ant to startWLS for the first time and create DS
  command: "ant startAdminServer"
  #async: 999999999999999
  #poll: 0  
  args:
    #timeout: 500  
    chdir: "{{ inspy_capture }}"  

#- name: Run startWeblogic with async
#  become: yes
#  become_user: oracle
#  command: ./startWebLogic.sh
#  async: 999999999999
#  poll: 0  
#  args:
#    chdir: "{{ oracle_base }}/Middleware_Home/user_projects/domains/{{ domain_name }}/bin"  

- name: Wait for Admin Server to startup
  wait_for: port={{ admin_server_port }} delay=2 timeout=400

- name: Create security folder for UCM
  file: state=directory path={{ domain_user_projects }}/servers/UCM_server1/security owner={{ oracle_user }} #group={{ oracle_group }}

- name: Create boot properties file for UCM
  template: src=boot.properties dest={{ domain_user_projects }}/servers/UCM_server1/security/ owner={{ oracle_user }} #group={{ oracle_group }}

- name: Run UCM with async
  command: "./startManagedWebLogic.sh UCM_server1 http://{{ admin_server_hostname }}:7001"
  async: 99999999999
  poll: 0  
  args:
    chdir: "{{ oracle_base }}/Middleware_Home/user_projects/domains/{{ domain_name }}/bin"  

- name: Waiting for UCM to come up
  wait_for: port=16200 delay=2 timeout=400 

- name: Create security folder for OSB
  file: state=directory path={{ domain_user_projects }}/servers/osb_server1/security owner={{ oracle_user }} #group={{ oracle_group }}

- name: Create boot properties file for OSB
  template: src=boot.properties dest={{ domain_user_projects }}/servers/osb_server1/security/ owner={{ oracle_user }} #group={{ oracle_group }}

- name: Run OSB with async
  command: "./startManagedWebLogic.sh osb_server1 http://{{ admin_server_hostname }}:7001"
  async: 99999999999
  poll: 0  
  args:
    chdir: "{{ oracle_base }}/Middleware_Home/user_projects/domains/{{ domain_name }}/bin"  

- name: Waiting for OSB to come up
  wait_for: port=8011 delay=2 timeout=400

- name: Create security folder for SOA
  file: state=directory path={{ domain_user_projects }}/servers/soa_server1/security owner={{ oracle_user }} #group={{ oracle_group }}

- name: Create boot properties file for SOA
  template: src=boot.properties dest={{ domain_user_projects }}/servers/soa_server1/security/ owner={{ oracle_user }} #group={{ oracle_group }}

- name: Run SOA with async
  command: "./startManagedWebLogic.sh soa_server1 http://{{ admin_server_hostname }}:7001"
  async: 9999999999
  poll: 0  
  args:
    chdir: "{{ oracle_base }}/Middleware_Home/user_projects/domains/{{ domain_name }}/bin"  

- name: Waiting for SOA to come up
  wait_for: port=8001 delay=2 timeout=600
  
- name: Create security folder for IUI
  file: state=directory path={{ domain_user_projects }}/servers/iui_server1/security owner={{ oracle_user }} #group={{ oracle_group }}

- name: Create boot properties file for IUI
  template: src=boot.properties dest={{ domain_user_projects }}/servers/iui_server1/security/ owner={{ oracle_user }} #group={{ oracle_group }}

- name: Run IUI with async
  command: "./startManagedWebLogic.sh iui_server1 http://{{ admin_server_hostname }}:7001"
  async: 99999999999
  poll: 0  
  args:
    chdir: "{{ oracle_base }}/Middleware_Home/user_projects/domains/{{ domain_name }}/bin"  

- name: Waiting for IUI to come up
  wait_for: port=7011 delay=2 timeout=400
  